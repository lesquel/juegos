# Pre-commit hooks para mantener calidad del código
repos:
  # Elimina imports no usados AUTOMÁTICAMENTE
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --ignore-init-module-imports

  # Formateo de código
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        args: [--line-length=88]
        language_version: python3.13

  # Ordenamiento de imports
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=120, --extend-ignore=E203]
        exclude: __init__\.py$ #

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-ujson
          - types-aiofiles
        args:
          - --ignore-missing-imports
          - --explicit-package-bases
          - --disable-error-code=attr-defined
          - --disable-error-code=type-arg

  # # Seguridad
  # - repo: https://github.com/pycqa/bandit
  #   rev: 1.7.5
  #   hooks:
  #     - id: bandit
  #       args: ["-r", "."]
  #       exclude: tests/

  # Hooks generales
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-json
      - id: check-merge-conflict
      - id: debug-statements
      - id: requirements-txt-fixer

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]
