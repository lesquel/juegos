/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'

const TestLazyRouteImport = createFileRoute('/test')()
const GamesLazyRouteImport = createFileRoute('/games')()
const CategoryGamesLazyRouteImport = createFileRoute('/category-games')()
const UserMeLazyRouteImport = createFileRoute('/user/me')()
const TransfersNewLazyRouteImport = createFileRoute('/transfers/new')()
const TransfersIdLazyRouteImport = createFileRoute('/transfers/$id')()
const GamesIdLazyRouteImport = createFileRoute('/games/$id')()
const CategoryGamesIdLazyRouteImport = createFileRoute('/category-games/$id')()
const AuthRegisterLazyRouteImport = createFileRoute('/auth/register')()
const AuthLoginLazyRouteImport = createFileRoute('/auth/login')()
const PlayOnlineTictacLazyRouteImport = createFileRoute('/play/online/tictac')()
const PlayOnlinePongLazyRouteImport = createFileRoute('/play/online/pong')()
const PlayOnlineConnect4LazyRouteImport = createFileRoute(
  '/play/online/connect4',
)()
const PlayMarketplaceTheSocietyOfMultiphobicsLazyRouteImport = createFileRoute(
  '/play/marketplace/the-society-of-multiphobics',
)()
const PlayMarketplaceSquad13LazyRouteImport = createFileRoute(
  '/play/marketplace/squad-13',
)()
const PlayMarketplaceRuletaCasinoLazyRouteImport = createFileRoute(
  '/play/marketplace/ruleta-casino',
)()
const PlayMarketplacePuzleLazyRouteImport = createFileRoute(
  '/play/marketplace/puzle',
)()
const PlayMarketplaceMaquinaTragamonedasReactLazyRouteImport = createFileRoute(
  '/play/marketplace/maquina-tragamonedas-react',
)()
const PlayMarketplaceLostOnStrangerTerraLazyRouteImport = createFileRoute(
  '/play/marketplace/lost-on-stranger-terra',
)()
const PlayMarketplaceLostCityLazyRouteImport = createFileRoute(
  '/play/marketplace/lost-city',
)()
const PlayMarketplaceHipodromocasinoReactLazyRouteImport = createFileRoute(
  '/play/marketplace/hipodromocasino-react',
)()
const PlayMarketplaceGolfrogLazyRouteImport = createFileRoute(
  '/play/marketplace/golfrog',
)()
const PlayMarketplaceDoNotMakeLazyRouteImport = createFileRoute(
  '/play/marketplace/do-not-make',
)()
const PlayMarketplaceDadosReactLazyRouteImport = createFileRoute(
  '/play/marketplace/dados-react',
)()
const GamesIdMatchesLazyRouteImport = createFileRoute('/games/$id/matches')()

const TestLazyRoute = TestLazyRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/test.lazy').then((d) => d.Route))
const GamesLazyRoute = GamesLazyRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/games.lazy').then((d) => d.Route))
const CategoryGamesLazyRoute = CategoryGamesLazyRouteImport.update({
  id: '/category-games',
  path: '/category-games',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/category-games.lazy').then((d) => d.Route),
)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const UserMeLazyRoute = UserMeLazyRouteImport.update({
  id: '/user/me',
  path: '/user/me',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/user.me.lazy').then((d) => d.Route))
const TransfersNewLazyRoute = TransfersNewLazyRouteImport.update({
  id: '/transfers/new',
  path: '/transfers/new',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/transfers.new.lazy').then((d) => d.Route))
const TransfersIdLazyRoute = TransfersIdLazyRouteImport.update({
  id: '/transfers/$id',
  path: '/transfers/$id',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/transfers.$id.lazy').then((d) => d.Route))
const GamesIdLazyRoute = GamesIdLazyRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => GamesLazyRoute,
} as any).lazy(() => import('./routes/games.$id.lazy').then((d) => d.Route))
const CategoryGamesIdLazyRoute = CategoryGamesIdLazyRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => CategoryGamesLazyRoute,
} as any).lazy(() =>
  import('./routes/category-games.$id.lazy').then((d) => d.Route),
)
const AuthRegisterLazyRoute = AuthRegisterLazyRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))
const AuthLoginLazyRoute = AuthLoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))
const PlayOnlineTictacLazyRoute = PlayOnlineTictacLazyRouteImport.update({
  id: '/play/online/tictac',
  path: '/play/online/tictac',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play.online.tictac.lazy').then((d) => d.Route),
)
const PlayOnlinePongLazyRoute = PlayOnlinePongLazyRouteImport.update({
  id: '/play/online/pong',
  path: '/play/online/pong',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play.online.pong.lazy').then((d) => d.Route),
)
const PlayOnlineConnect4LazyRoute = PlayOnlineConnect4LazyRouteImport.update({
  id: '/play/online/connect4',
  path: '/play/online/connect4',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play.online.connect4.lazy').then((d) => d.Route),
)
const PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute =
  PlayMarketplaceTheSocietyOfMultiphobicsLazyRouteImport.update({
    id: '/play/marketplace/the-society-of-multiphobics',
    path: '/play/marketplace/the-society-of-multiphobics',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/the-society-of-multiphobics.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceSquad13LazyRoute =
  PlayMarketplaceSquad13LazyRouteImport.update({
    id: '/play/marketplace/squad-13',
    path: '/play/marketplace/squad-13',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/squad-13.lazy').then((d) => d.Route),
  )
const PlayMarketplaceRuletaCasinoLazyRoute =
  PlayMarketplaceRuletaCasinoLazyRouteImport.update({
    id: '/play/marketplace/ruleta-casino',
    path: '/play/marketplace/ruleta-casino',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/ruleta-casino.lazy').then((d) => d.Route),
  )
const PlayMarketplacePuzleLazyRoute =
  PlayMarketplacePuzleLazyRouteImport.update({
    id: '/play/marketplace/puzle',
    path: '/play/marketplace/puzle',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/puzle.lazy').then((d) => d.Route),
  )
const PlayMarketplaceMaquinaTragamonedasReactLazyRoute =
  PlayMarketplaceMaquinaTragamonedasReactLazyRouteImport.update({
    id: '/play/marketplace/maquina-tragamonedas-react',
    path: '/play/marketplace/maquina-tragamonedas-react',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/maquina-tragamonedas-react.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceLostOnStrangerTerraLazyRoute =
  PlayMarketplaceLostOnStrangerTerraLazyRouteImport.update({
    id: '/play/marketplace/lost-on-stranger-terra',
    path: '/play/marketplace/lost-on-stranger-terra',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/lost-on-stranger-terra.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceLostCityLazyRoute =
  PlayMarketplaceLostCityLazyRouteImport.update({
    id: '/play/marketplace/lost-city',
    path: '/play/marketplace/lost-city',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/lost-city.lazy').then((d) => d.Route),
  )
const PlayMarketplaceHipodromocasinoReactLazyRoute =
  PlayMarketplaceHipodromocasinoReactLazyRouteImport.update({
    id: '/play/marketplace/hipodromocasino-react',
    path: '/play/marketplace/hipodromocasino-react',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/hipodromocasino-react.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceGolfrogLazyRoute =
  PlayMarketplaceGolfrogLazyRouteImport.update({
    id: '/play/marketplace/golfrog',
    path: '/play/marketplace/golfrog',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/golfrog.lazy').then((d) => d.Route),
  )
const PlayMarketplaceDoNotMakeLazyRoute =
  PlayMarketplaceDoNotMakeLazyRouteImport.update({
    id: '/play/marketplace/do-not-make',
    path: '/play/marketplace/do-not-make',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/do-not-make.lazy').then((d) => d.Route),
  )
const PlayMarketplaceDadosReactLazyRoute =
  PlayMarketplaceDadosReactLazyRouteImport.update({
    id: '/play/marketplace/dados-react',
    path: '/play/marketplace/dados-react',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/dados-react.lazy').then((d) => d.Route),
  )
const GamesIdMatchesLazyRoute = GamesIdMatchesLazyRouteImport.update({
  id: '/matches',
  path: '/matches',
  getParentRoute: () => GamesIdLazyRoute,
} as any).lazy(() =>
  import('./routes/games.$id.matches.lazy').then((d) => d.Route),
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/category-games': typeof CategoryGamesLazyRouteWithChildren
  '/games': typeof GamesLazyRouteWithChildren
  '/test': typeof TestLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/category-games/$id': typeof CategoryGamesIdLazyRoute
  '/games/$id': typeof GamesIdLazyRouteWithChildren
  '/transfers/$id': typeof TransfersIdLazyRoute
  '/transfers/new': typeof TransfersNewLazyRoute
  '/user/me': typeof UserMeLazyRoute
  '/games/$id/matches': typeof GamesIdMatchesLazyRoute
  '/play/marketplace/dados-react': typeof PlayMarketplaceDadosReactLazyRoute
  '/play/marketplace/do-not-make': typeof PlayMarketplaceDoNotMakeLazyRoute
  '/play/marketplace/golfrog': typeof PlayMarketplaceGolfrogLazyRoute
  '/play/marketplace/hipodromocasino-react': typeof PlayMarketplaceHipodromocasinoReactLazyRoute
  '/play/marketplace/lost-city': typeof PlayMarketplaceLostCityLazyRoute
  '/play/marketplace/lost-on-stranger-terra': typeof PlayMarketplaceLostOnStrangerTerraLazyRoute
  '/play/marketplace/maquina-tragamonedas-react': typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  '/play/marketplace/puzle': typeof PlayMarketplacePuzleLazyRoute
  '/play/marketplace/ruleta-casino': typeof PlayMarketplaceRuletaCasinoLazyRoute
  '/play/marketplace/squad-13': typeof PlayMarketplaceSquad13LazyRoute
  '/play/marketplace/the-society-of-multiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  '/play/online/connect4': typeof PlayOnlineConnect4LazyRoute
  '/play/online/pong': typeof PlayOnlinePongLazyRoute
  '/play/online/tictac': typeof PlayOnlineTictacLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/category-games': typeof CategoryGamesLazyRouteWithChildren
  '/games': typeof GamesLazyRouteWithChildren
  '/test': typeof TestLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/category-games/$id': typeof CategoryGamesIdLazyRoute
  '/games/$id': typeof GamesIdLazyRouteWithChildren
  '/transfers/$id': typeof TransfersIdLazyRoute
  '/transfers/new': typeof TransfersNewLazyRoute
  '/user/me': typeof UserMeLazyRoute
  '/games/$id/matches': typeof GamesIdMatchesLazyRoute
  '/play/marketplace/dados-react': typeof PlayMarketplaceDadosReactLazyRoute
  '/play/marketplace/do-not-make': typeof PlayMarketplaceDoNotMakeLazyRoute
  '/play/marketplace/golfrog': typeof PlayMarketplaceGolfrogLazyRoute
  '/play/marketplace/hipodromocasino-react': typeof PlayMarketplaceHipodromocasinoReactLazyRoute
  '/play/marketplace/lost-city': typeof PlayMarketplaceLostCityLazyRoute
  '/play/marketplace/lost-on-stranger-terra': typeof PlayMarketplaceLostOnStrangerTerraLazyRoute
  '/play/marketplace/maquina-tragamonedas-react': typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  '/play/marketplace/puzle': typeof PlayMarketplacePuzleLazyRoute
  '/play/marketplace/ruleta-casino': typeof PlayMarketplaceRuletaCasinoLazyRoute
  '/play/marketplace/squad-13': typeof PlayMarketplaceSquad13LazyRoute
  '/play/marketplace/the-society-of-multiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  '/play/online/connect4': typeof PlayOnlineConnect4LazyRoute
  '/play/online/pong': typeof PlayOnlinePongLazyRoute
  '/play/online/tictac': typeof PlayOnlineTictacLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/category-games': typeof CategoryGamesLazyRouteWithChildren
  '/games': typeof GamesLazyRouteWithChildren
  '/test': typeof TestLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/category-games/$id': typeof CategoryGamesIdLazyRoute
  '/games/$id': typeof GamesIdLazyRouteWithChildren
  '/transfers/$id': typeof TransfersIdLazyRoute
  '/transfers/new': typeof TransfersNewLazyRoute
  '/user/me': typeof UserMeLazyRoute
  '/games/$id/matches': typeof GamesIdMatchesLazyRoute
  '/play/marketplace/dados-react': typeof PlayMarketplaceDadosReactLazyRoute
  '/play/marketplace/do-not-make': typeof PlayMarketplaceDoNotMakeLazyRoute
  '/play/marketplace/golfrog': typeof PlayMarketplaceGolfrogLazyRoute
  '/play/marketplace/hipodromocasino-react': typeof PlayMarketplaceHipodromocasinoReactLazyRoute
  '/play/marketplace/lost-city': typeof PlayMarketplaceLostCityLazyRoute
  '/play/marketplace/lost-on-stranger-terra': typeof PlayMarketplaceLostOnStrangerTerraLazyRoute
  '/play/marketplace/maquina-tragamonedas-react': typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  '/play/marketplace/puzle': typeof PlayMarketplacePuzleLazyRoute
  '/play/marketplace/ruleta-casino': typeof PlayMarketplaceRuletaCasinoLazyRoute
  '/play/marketplace/squad-13': typeof PlayMarketplaceSquad13LazyRoute
  '/play/marketplace/the-society-of-multiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  '/play/online/connect4': typeof PlayOnlineConnect4LazyRoute
  '/play/online/pong': typeof PlayOnlinePongLazyRoute
  '/play/online/tictac': typeof PlayOnlineTictacLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/category-games'
    | '/games'
    | '/test'
    | '/auth/login'
    | '/auth/register'
    | '/category-games/$id'
    | '/games/$id'
    | '/transfers/$id'
    | '/transfers/new'
    | '/user/me'
    | '/games/$id/matches'
    | '/play/marketplace/dados-react'
    | '/play/marketplace/do-not-make'
    | '/play/marketplace/golfrog'
    | '/play/marketplace/hipodromocasino-react'
    | '/play/marketplace/lost-city'
    | '/play/marketplace/lost-on-stranger-terra'
    | '/play/marketplace/maquina-tragamonedas-react'
    | '/play/marketplace/puzle'
    | '/play/marketplace/ruleta-casino'
    | '/play/marketplace/squad-13'
    | '/play/marketplace/the-society-of-multiphobics'
    | '/play/online/connect4'
    | '/play/online/pong'
    | '/play/online/tictac'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/category-games'
    | '/games'
    | '/test'
    | '/auth/login'
    | '/auth/register'
    | '/category-games/$id'
    | '/games/$id'
    | '/transfers/$id'
    | '/transfers/new'
    | '/user/me'
    | '/games/$id/matches'
    | '/play/marketplace/dados-react'
    | '/play/marketplace/do-not-make'
    | '/play/marketplace/golfrog'
    | '/play/marketplace/hipodromocasino-react'
    | '/play/marketplace/lost-city'
    | '/play/marketplace/lost-on-stranger-terra'
    | '/play/marketplace/maquina-tragamonedas-react'
    | '/play/marketplace/puzle'
    | '/play/marketplace/ruleta-casino'
    | '/play/marketplace/squad-13'
    | '/play/marketplace/the-society-of-multiphobics'
    | '/play/online/connect4'
    | '/play/online/pong'
    | '/play/online/tictac'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/category-games'
    | '/games'
    | '/test'
    | '/auth/login'
    | '/auth/register'
    | '/category-games/$id'
    | '/games/$id'
    | '/transfers/$id'
    | '/transfers/new'
    | '/user/me'
    | '/games/$id/matches'
    | '/play/marketplace/dados-react'
    | '/play/marketplace/do-not-make'
    | '/play/marketplace/golfrog'
    | '/play/marketplace/hipodromocasino-react'
    | '/play/marketplace/lost-city'
    | '/play/marketplace/lost-on-stranger-terra'
    | '/play/marketplace/maquina-tragamonedas-react'
    | '/play/marketplace/puzle'
    | '/play/marketplace/ruleta-casino'
    | '/play/marketplace/squad-13'
    | '/play/marketplace/the-society-of-multiphobics'
    | '/play/online/connect4'
    | '/play/online/pong'
    | '/play/online/tictac'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  CategoryGamesLazyRoute: typeof CategoryGamesLazyRouteWithChildren
  GamesLazyRoute: typeof GamesLazyRouteWithChildren
  TestLazyRoute: typeof TestLazyRoute
  TransfersIdLazyRoute: typeof TransfersIdLazyRoute
  TransfersNewLazyRoute: typeof TransfersNewLazyRoute
  UserMeLazyRoute: typeof UserMeLazyRoute
  PlayMarketplaceDadosReactLazyRoute: typeof PlayMarketplaceDadosReactLazyRoute
  PlayMarketplaceDoNotMakeLazyRoute: typeof PlayMarketplaceDoNotMakeLazyRoute
  PlayMarketplaceGolfrogLazyRoute: typeof PlayMarketplaceGolfrogLazyRoute
  PlayMarketplaceHipodromocasinoReactLazyRoute: typeof PlayMarketplaceHipodromocasinoReactLazyRoute
  PlayMarketplaceLostCityLazyRoute: typeof PlayMarketplaceLostCityLazyRoute
  PlayMarketplaceLostOnStrangerTerraLazyRoute: typeof PlayMarketplaceLostOnStrangerTerraLazyRoute
  PlayMarketplaceMaquinaTragamonedasReactLazyRoute: typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  PlayMarketplacePuzleLazyRoute: typeof PlayMarketplacePuzleLazyRoute
  PlayMarketplaceRuletaCasinoLazyRoute: typeof PlayMarketplaceRuletaCasinoLazyRoute
  PlayMarketplaceSquad13LazyRoute: typeof PlayMarketplaceSquad13LazyRoute
  PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute: typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  PlayOnlineConnect4LazyRoute: typeof PlayOnlineConnect4LazyRoute
  PlayOnlinePongLazyRoute: typeof PlayOnlinePongLazyRoute
  PlayOnlineTictacLazyRoute: typeof PlayOnlineTictacLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games': {
      id: '/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/category-games': {
      id: '/category-games'
      path: '/category-games'
      fullPath: '/category-games'
      preLoaderRoute: typeof CategoryGamesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/me': {
      id: '/user/me'
      path: '/user/me'
      fullPath: '/user/me'
      preLoaderRoute: typeof UserMeLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transfers/new': {
      id: '/transfers/new'
      path: '/transfers/new'
      fullPath: '/transfers/new'
      preLoaderRoute: typeof TransfersNewLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transfers/$id': {
      id: '/transfers/$id'
      path: '/transfers/$id'
      fullPath: '/transfers/$id'
      preLoaderRoute: typeof TransfersIdLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$id': {
      id: '/games/$id'
      path: '/$id'
      fullPath: '/games/$id'
      preLoaderRoute: typeof GamesIdLazyRouteImport
      parentRoute: typeof GamesLazyRoute
    }
    '/category-games/$id': {
      id: '/category-games/$id'
      path: '/$id'
      fullPath: '/category-games/$id'
      preLoaderRoute: typeof CategoryGamesIdLazyRouteImport
      parentRoute: typeof CategoryGamesLazyRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/play/online/tictac': {
      id: '/play/online/tictac'
      path: '/play/online/tictac'
      fullPath: '/play/online/tictac'
      preLoaderRoute: typeof PlayOnlineTictacLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/online/pong': {
      id: '/play/online/pong'
      path: '/play/online/pong'
      fullPath: '/play/online/pong'
      preLoaderRoute: typeof PlayOnlinePongLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/online/connect4': {
      id: '/play/online/connect4'
      path: '/play/online/connect4'
      fullPath: '/play/online/connect4'
      preLoaderRoute: typeof PlayOnlineConnect4LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/the-society-of-multiphobics': {
      id: '/play/marketplace/the-society-of-multiphobics'
      path: '/play/marketplace/the-society-of-multiphobics'
      fullPath: '/play/marketplace/the-society-of-multiphobics'
      preLoaderRoute: typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/squad-13': {
      id: '/play/marketplace/squad-13'
      path: '/play/marketplace/squad-13'
      fullPath: '/play/marketplace/squad-13'
      preLoaderRoute: typeof PlayMarketplaceSquad13LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/ruleta-casino': {
      id: '/play/marketplace/ruleta-casino'
      path: '/play/marketplace/ruleta-casino'
      fullPath: '/play/marketplace/ruleta-casino'
      preLoaderRoute: typeof PlayMarketplaceRuletaCasinoLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/puzle': {
      id: '/play/marketplace/puzle'
      path: '/play/marketplace/puzle'
      fullPath: '/play/marketplace/puzle'
      preLoaderRoute: typeof PlayMarketplacePuzleLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/maquina-tragamonedas-react': {
      id: '/play/marketplace/maquina-tragamonedas-react'
      path: '/play/marketplace/maquina-tragamonedas-react'
      fullPath: '/play/marketplace/maquina-tragamonedas-react'
      preLoaderRoute: typeof PlayMarketplaceMaquinaTragamonedasReactLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/lost-on-stranger-terra': {
      id: '/play/marketplace/lost-on-stranger-terra'
      path: '/play/marketplace/lost-on-stranger-terra'
      fullPath: '/play/marketplace/lost-on-stranger-terra'
      preLoaderRoute: typeof PlayMarketplaceLostOnStrangerTerraLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/lost-city': {
      id: '/play/marketplace/lost-city'
      path: '/play/marketplace/lost-city'
      fullPath: '/play/marketplace/lost-city'
      preLoaderRoute: typeof PlayMarketplaceLostCityLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/hipodromocasino-react': {
      id: '/play/marketplace/hipodromocasino-react'
      path: '/play/marketplace/hipodromocasino-react'
      fullPath: '/play/marketplace/hipodromocasino-react'
      preLoaderRoute: typeof PlayMarketplaceHipodromocasinoReactLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/golfrog': {
      id: '/play/marketplace/golfrog'
      path: '/play/marketplace/golfrog'
      fullPath: '/play/marketplace/golfrog'
      preLoaderRoute: typeof PlayMarketplaceGolfrogLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/do-not-make': {
      id: '/play/marketplace/do-not-make'
      path: '/play/marketplace/do-not-make'
      fullPath: '/play/marketplace/do-not-make'
      preLoaderRoute: typeof PlayMarketplaceDoNotMakeLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/dados-react': {
      id: '/play/marketplace/dados-react'
      path: '/play/marketplace/dados-react'
      fullPath: '/play/marketplace/dados-react'
      preLoaderRoute: typeof PlayMarketplaceDadosReactLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$id/matches': {
      id: '/games/$id/matches'
      path: '/matches'
      fullPath: '/games/$id/matches'
      preLoaderRoute: typeof GamesIdMatchesLazyRouteImport
      parentRoute: typeof GamesIdLazyRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface CategoryGamesLazyRouteChildren {
  CategoryGamesIdLazyRoute: typeof CategoryGamesIdLazyRoute
}

const CategoryGamesLazyRouteChildren: CategoryGamesLazyRouteChildren = {
  CategoryGamesIdLazyRoute: CategoryGamesIdLazyRoute,
}

const CategoryGamesLazyRouteWithChildren =
  CategoryGamesLazyRoute._addFileChildren(CategoryGamesLazyRouteChildren)

interface GamesIdLazyRouteChildren {
  GamesIdMatchesLazyRoute: typeof GamesIdMatchesLazyRoute
}

const GamesIdLazyRouteChildren: GamesIdLazyRouteChildren = {
  GamesIdMatchesLazyRoute: GamesIdMatchesLazyRoute,
}

const GamesIdLazyRouteWithChildren = GamesIdLazyRoute._addFileChildren(
  GamesIdLazyRouteChildren,
)

interface GamesLazyRouteChildren {
  GamesIdLazyRoute: typeof GamesIdLazyRouteWithChildren
}

const GamesLazyRouteChildren: GamesLazyRouteChildren = {
  GamesIdLazyRoute: GamesIdLazyRouteWithChildren,
}

const GamesLazyRouteWithChildren = GamesLazyRoute._addFileChildren(
  GamesLazyRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  CategoryGamesLazyRoute: CategoryGamesLazyRouteWithChildren,
  GamesLazyRoute: GamesLazyRouteWithChildren,
  TestLazyRoute: TestLazyRoute,
  TransfersIdLazyRoute: TransfersIdLazyRoute,
  TransfersNewLazyRoute: TransfersNewLazyRoute,
  UserMeLazyRoute: UserMeLazyRoute,
  PlayMarketplaceDadosReactLazyRoute: PlayMarketplaceDadosReactLazyRoute,
  PlayMarketplaceDoNotMakeLazyRoute: PlayMarketplaceDoNotMakeLazyRoute,
  PlayMarketplaceGolfrogLazyRoute: PlayMarketplaceGolfrogLazyRoute,
  PlayMarketplaceHipodromocasinoReactLazyRoute:
    PlayMarketplaceHipodromocasinoReactLazyRoute,
  PlayMarketplaceLostCityLazyRoute: PlayMarketplaceLostCityLazyRoute,
  PlayMarketplaceLostOnStrangerTerraLazyRoute:
    PlayMarketplaceLostOnStrangerTerraLazyRoute,
  PlayMarketplaceMaquinaTragamonedasReactLazyRoute:
    PlayMarketplaceMaquinaTragamonedasReactLazyRoute,
  PlayMarketplacePuzleLazyRoute: PlayMarketplacePuzleLazyRoute,
  PlayMarketplaceRuletaCasinoLazyRoute: PlayMarketplaceRuletaCasinoLazyRoute,
  PlayMarketplaceSquad13LazyRoute: PlayMarketplaceSquad13LazyRoute,
  PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute:
    PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute,
  PlayOnlineConnect4LazyRoute: PlayOnlineConnect4LazyRoute,
  PlayOnlinePongLazyRoute: PlayOnlinePongLazyRoute,
  PlayOnlineTictacLazyRoute: PlayOnlineTictacLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
