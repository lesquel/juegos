/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as GamesRouteImport } from './routes/games'
import { Route as CategoryGamesRouteImport } from './routes/category-games'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PlayMarketplaceMaquinaTragamonedasRouteImport } from './routes/play/marketplace/maquinaTragamonedas'
import { Route as PlayMarketplaceLostCityRouteImport } from './routes/play/marketplace/lostCity'
import { Route as PlayMarketplaceTheSocietyOfMultiphobicsRouteImport } from './routes/play/marketplace/TheSocietyOfMultiphobics'
import { Route as PlayMarketplaceLostOnStrangerTerraRouteImport } from './routes/play/marketplace/LostOnStrangerTerra'

const GamesIndexLazyRouteImport = createFileRoute('/games/')()
const CategoryGamesIndexLazyRouteImport = createFileRoute('/category-games/')()
const UserMeLazyRouteImport = createFileRoute('/user/me')()
const TransfersNewLazyRouteImport = createFileRoute('/transfers/new')()
const TransfersIdLazyRouteImport = createFileRoute('/transfers/$id')()
const CategoryGamesIdLazyRouteImport = createFileRoute('/category-games/$id')()
const AuthRegisterLazyRouteImport = createFileRoute('/auth/register')()
const AuthLoginLazyRouteImport = createFileRoute('/auth/login')()
const GamesIdIndexLazyRouteImport = createFileRoute('/games/$id/')()
const PlayOnlineTictacLazyRouteImport = createFileRoute('/play/online/tictac')()
const PlayOnlineConnect4LazyRouteImport = createFileRoute(
  '/play/online/connect4',
)()
const PlayMarketplaceWordScrambleLazyRouteImport = createFileRoute(
  '/play/marketplace/word-scramble',
)()
const PlayMarketplaceTheSocietyOfMultiphobicsLazyRouteImport = createFileRoute(
  '/play/marketplace/the-society-of-multiphobics',
)()
const PlayMarketplaceRuletacasinoLazyRouteImport = createFileRoute(
  '/play/marketplace/ruletacasino',
)()
const PlayMarketplaceRockPaperScissorsLazyRouteImport = createFileRoute(
  '/play/marketplace/rock-paper-scissors',
)()
const PlayMarketplacePuzleLazyRouteImport = createFileRoute(
  '/play/marketplace/puzle',
)()
const PlayMarketplacePongLazyRouteImport = createFileRoute(
  '/play/marketplace/pong',
)()
const PlayMarketplaceMemoryGameLazyRouteImport = createFileRoute(
  '/play/marketplace/memory-game',
)()
const PlayMarketplaceMaquinaTragamonedasReactLazyRouteImport = createFileRoute(
  '/play/marketplace/maquina-tragamonedas-react',
)()
const PlayMarketplaceHipodromocasinoLazyRouteImport = createFileRoute(
  '/play/marketplace/hipodromocasino',
)()
const PlayMarketplaceGolfrogLazyRouteImport = createFileRoute(
  '/play/marketplace/golfrog',
)()
const PlayMarketplaceDoNotMakeLazyRouteImport = createFileRoute(
  '/play/marketplace/do-not-make',
)()
const PlayMarketplaceDadosLazyRouteImport = createFileRoute(
  '/play/marketplace/dados',
)()
const PlayMarketplaceBlockSortLazyRouteImport = createFileRoute(
  '/play/marketplace/block-sort',
)()
const PlayMarketplace2048LazyRouteImport = createFileRoute(
  '/play/marketplace/2048',
)()
const GamesIdMatchesLazyRouteImport = createFileRoute('/games/$id/matches')()

const GamesRoute = GamesRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoryGamesRoute = CategoryGamesRouteImport.update({
  id: '/category-games',
  path: '/category-games',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const GamesIndexLazyRoute = GamesIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GamesRoute,
} as any).lazy(() => import('./routes/games/index.lazy').then((d) => d.Route))
const CategoryGamesIndexLazyRoute = CategoryGamesIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CategoryGamesRoute,
} as any).lazy(() =>
  import('./routes/category-games/index.lazy').then((d) => d.Route),
)
const UserMeLazyRoute = UserMeLazyRouteImport.update({
  id: '/user/me',
  path: '/user/me',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/user.me.lazy').then((d) => d.Route))
const TransfersNewLazyRoute = TransfersNewLazyRouteImport.update({
  id: '/transfers/new',
  path: '/transfers/new',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/transfers.new.lazy').then((d) => d.Route))
const TransfersIdLazyRoute = TransfersIdLazyRouteImport.update({
  id: '/transfers/$id',
  path: '/transfers/$id',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/transfers.$id.lazy').then((d) => d.Route))
const CategoryGamesIdLazyRoute = CategoryGamesIdLazyRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => CategoryGamesRoute,
} as any).lazy(() =>
  import('./routes/category-games.$id.lazy').then((d) => d.Route),
)
const AuthRegisterLazyRoute = AuthRegisterLazyRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))
const AuthLoginLazyRoute = AuthLoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))
const GamesIdIndexLazyRoute = GamesIdIndexLazyRouteImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => GamesRoute,
} as any).lazy(() =>
  import('./routes/games/$id/index.lazy').then((d) => d.Route),
)
const PlayOnlineTictacLazyRoute = PlayOnlineTictacLazyRouteImport.update({
  id: '/play/online/tictac',
  path: '/play/online/tictac',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play.online.tictac.lazy').then((d) => d.Route),
)
const PlayOnlineConnect4LazyRoute = PlayOnlineConnect4LazyRouteImport.update({
  id: '/play/online/connect4',
  path: '/play/online/connect4',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play.online.connect4.lazy').then((d) => d.Route),
)
const PlayMarketplaceWordScrambleLazyRoute =
  PlayMarketplaceWordScrambleLazyRouteImport.update({
    id: '/play/marketplace/word-scramble',
    path: '/play/marketplace/word-scramble',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/word-scramble.lazy').then((d) => d.Route),
  )
const PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute =
  PlayMarketplaceTheSocietyOfMultiphobicsLazyRouteImport.update({
    id: '/play/marketplace/the-society-of-multiphobics',
    path: '/play/marketplace/the-society-of-multiphobics',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/the-society-of-multiphobics.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceRuletacasinoLazyRoute =
  PlayMarketplaceRuletacasinoLazyRouteImport.update({
    id: '/play/marketplace/ruletacasino',
    path: '/play/marketplace/ruletacasino',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/ruletacasino.lazy').then((d) => d.Route),
  )
const PlayMarketplaceRockPaperScissorsLazyRoute =
  PlayMarketplaceRockPaperScissorsLazyRouteImport.update({
    id: '/play/marketplace/rock-paper-scissors',
    path: '/play/marketplace/rock-paper-scissors',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/rock-paper-scissors.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplacePuzleLazyRoute =
  PlayMarketplacePuzleLazyRouteImport.update({
    id: '/play/marketplace/puzle',
    path: '/play/marketplace/puzle',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/puzle.lazy').then((d) => d.Route),
  )
const PlayMarketplacePongLazyRoute = PlayMarketplacePongLazyRouteImport.update({
  id: '/play/marketplace/pong',
  path: '/play/marketplace/pong',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play/marketplace/pong.lazy').then((d) => d.Route),
)
const PlayMarketplaceMemoryGameLazyRoute =
  PlayMarketplaceMemoryGameLazyRouteImport.update({
    id: '/play/marketplace/memory-game',
    path: '/play/marketplace/memory-game',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/memory-game.lazy').then((d) => d.Route),
  )
const PlayMarketplaceMaquinaTragamonedasReactLazyRoute =
  PlayMarketplaceMaquinaTragamonedasReactLazyRouteImport.update({
    id: '/play/marketplace/maquina-tragamonedas-react',
    path: '/play/marketplace/maquina-tragamonedas-react',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/maquina-tragamonedas-react.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceHipodromocasinoLazyRoute =
  PlayMarketplaceHipodromocasinoLazyRouteImport.update({
    id: '/play/marketplace/hipodromocasino',
    path: '/play/marketplace/hipodromocasino',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/hipodromocasino.lazy').then(
      (d) => d.Route,
    ),
  )
const PlayMarketplaceGolfrogLazyRoute =
  PlayMarketplaceGolfrogLazyRouteImport.update({
    id: '/play/marketplace/golfrog',
    path: '/play/marketplace/golfrog',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/golfrog.lazy').then((d) => d.Route),
  )
const PlayMarketplaceDoNotMakeLazyRoute =
  PlayMarketplaceDoNotMakeLazyRouteImport.update({
    id: '/play/marketplace/do-not-make',
    path: '/play/marketplace/do-not-make',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/do-not-make.lazy').then((d) => d.Route),
  )
const PlayMarketplaceDadosLazyRoute =
  PlayMarketplaceDadosLazyRouteImport.update({
    id: '/play/marketplace/dados',
    path: '/play/marketplace/dados',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/dados.lazy').then((d) => d.Route),
  )
const PlayMarketplaceBlockSortLazyRoute =
  PlayMarketplaceBlockSortLazyRouteImport.update({
    id: '/play/marketplace/block-sort',
    path: '/play/marketplace/block-sort',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/play/marketplace/block-sort.lazy').then((d) => d.Route),
  )
const PlayMarketplace2048LazyRoute = PlayMarketplace2048LazyRouteImport.update({
  id: '/play/marketplace/2048',
  path: '/play/marketplace/2048',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/play/marketplace/2048.lazy').then((d) => d.Route),
)
const GamesIdMatchesLazyRoute = GamesIdMatchesLazyRouteImport.update({
  id: '/$id/matches',
  path: '/$id/matches',
  getParentRoute: () => GamesRoute,
} as any).lazy(() =>
  import('./routes/games/$id.matches.lazy').then((d) => d.Route),
)
const PlayMarketplaceMaquinaTragamonedasRoute =
  PlayMarketplaceMaquinaTragamonedasRouteImport.update({
    id: '/play/marketplace/maquinaTragamonedas',
    path: '/play/marketplace/maquinaTragamonedas',
    getParentRoute: () => rootRouteImport,
  } as any)
const PlayMarketplaceLostCityRoute = PlayMarketplaceLostCityRouteImport.update({
  id: '/play/marketplace/lostCity',
  path: '/play/marketplace/lostCity',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayMarketplaceTheSocietyOfMultiphobicsRoute =
  PlayMarketplaceTheSocietyOfMultiphobicsRouteImport.update({
    id: '/play/marketplace/TheSocietyOfMultiphobics',
    path: '/play/marketplace/TheSocietyOfMultiphobics',
    getParentRoute: () => rootRouteImport,
  } as any)
const PlayMarketplaceLostOnStrangerTerraRoute =
  PlayMarketplaceLostOnStrangerTerraRouteImport.update({
    id: '/play/marketplace/LostOnStrangerTerra',
    path: '/play/marketplace/LostOnStrangerTerra',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/category-games': typeof CategoryGamesRouteWithChildren
  '/games': typeof GamesRouteWithChildren
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/category-games/$id': typeof CategoryGamesIdLazyRoute
  '/transfers/$id': typeof TransfersIdLazyRoute
  '/transfers/new': typeof TransfersNewLazyRoute
  '/user/me': typeof UserMeLazyRoute
  '/category-games/': typeof CategoryGamesIndexLazyRoute
  '/games/': typeof GamesIndexLazyRoute
  '/play/marketplace/LostOnStrangerTerra': typeof PlayMarketplaceLostOnStrangerTerraRoute
  '/play/marketplace/TheSocietyOfMultiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsRoute
  '/play/marketplace/lostCity': typeof PlayMarketplaceLostCityRoute
  '/play/marketplace/maquinaTragamonedas': typeof PlayMarketplaceMaquinaTragamonedasRoute
  '/games/$id/matches': typeof GamesIdMatchesLazyRoute
  '/play/marketplace/2048': typeof PlayMarketplace2048LazyRoute
  '/play/marketplace/block-sort': typeof PlayMarketplaceBlockSortLazyRoute
  '/play/marketplace/dados': typeof PlayMarketplaceDadosLazyRoute
  '/play/marketplace/do-not-make': typeof PlayMarketplaceDoNotMakeLazyRoute
  '/play/marketplace/golfrog': typeof PlayMarketplaceGolfrogLazyRoute
  '/play/marketplace/hipodromocasino': typeof PlayMarketplaceHipodromocasinoLazyRoute
  '/play/marketplace/maquina-tragamonedas-react': typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  '/play/marketplace/memory-game': typeof PlayMarketplaceMemoryGameLazyRoute
  '/play/marketplace/pong': typeof PlayMarketplacePongLazyRoute
  '/play/marketplace/puzle': typeof PlayMarketplacePuzleLazyRoute
  '/play/marketplace/rock-paper-scissors': typeof PlayMarketplaceRockPaperScissorsLazyRoute
  '/play/marketplace/ruletacasino': typeof PlayMarketplaceRuletacasinoLazyRoute
  '/play/marketplace/the-society-of-multiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  '/play/marketplace/word-scramble': typeof PlayMarketplaceWordScrambleLazyRoute
  '/play/online/connect4': typeof PlayOnlineConnect4LazyRoute
  '/play/online/tictac': typeof PlayOnlineTictacLazyRoute
  '/games/$id': typeof GamesIdIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/category-games/$id': typeof CategoryGamesIdLazyRoute
  '/transfers/$id': typeof TransfersIdLazyRoute
  '/transfers/new': typeof TransfersNewLazyRoute
  '/user/me': typeof UserMeLazyRoute
  '/category-games': typeof CategoryGamesIndexLazyRoute
  '/games': typeof GamesIndexLazyRoute
  '/play/marketplace/LostOnStrangerTerra': typeof PlayMarketplaceLostOnStrangerTerraRoute
  '/play/marketplace/TheSocietyOfMultiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsRoute
  '/play/marketplace/lostCity': typeof PlayMarketplaceLostCityRoute
  '/play/marketplace/maquinaTragamonedas': typeof PlayMarketplaceMaquinaTragamonedasRoute
  '/games/$id/matches': typeof GamesIdMatchesLazyRoute
  '/play/marketplace/2048': typeof PlayMarketplace2048LazyRoute
  '/play/marketplace/block-sort': typeof PlayMarketplaceBlockSortLazyRoute
  '/play/marketplace/dados': typeof PlayMarketplaceDadosLazyRoute
  '/play/marketplace/do-not-make': typeof PlayMarketplaceDoNotMakeLazyRoute
  '/play/marketplace/golfrog': typeof PlayMarketplaceGolfrogLazyRoute
  '/play/marketplace/hipodromocasino': typeof PlayMarketplaceHipodromocasinoLazyRoute
  '/play/marketplace/maquina-tragamonedas-react': typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  '/play/marketplace/memory-game': typeof PlayMarketplaceMemoryGameLazyRoute
  '/play/marketplace/pong': typeof PlayMarketplacePongLazyRoute
  '/play/marketplace/puzle': typeof PlayMarketplacePuzleLazyRoute
  '/play/marketplace/rock-paper-scissors': typeof PlayMarketplaceRockPaperScissorsLazyRoute
  '/play/marketplace/ruletacasino': typeof PlayMarketplaceRuletacasinoLazyRoute
  '/play/marketplace/the-society-of-multiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  '/play/marketplace/word-scramble': typeof PlayMarketplaceWordScrambleLazyRoute
  '/play/online/connect4': typeof PlayOnlineConnect4LazyRoute
  '/play/online/tictac': typeof PlayOnlineTictacLazyRoute
  '/games/$id': typeof GamesIdIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/category-games': typeof CategoryGamesRouteWithChildren
  '/games': typeof GamesRouteWithChildren
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/category-games/$id': typeof CategoryGamesIdLazyRoute
  '/transfers/$id': typeof TransfersIdLazyRoute
  '/transfers/new': typeof TransfersNewLazyRoute
  '/user/me': typeof UserMeLazyRoute
  '/category-games/': typeof CategoryGamesIndexLazyRoute
  '/games/': typeof GamesIndexLazyRoute
  '/play/marketplace/LostOnStrangerTerra': typeof PlayMarketplaceLostOnStrangerTerraRoute
  '/play/marketplace/TheSocietyOfMultiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsRoute
  '/play/marketplace/lostCity': typeof PlayMarketplaceLostCityRoute
  '/play/marketplace/maquinaTragamonedas': typeof PlayMarketplaceMaquinaTragamonedasRoute
  '/games/$id/matches': typeof GamesIdMatchesLazyRoute
  '/play/marketplace/2048': typeof PlayMarketplace2048LazyRoute
  '/play/marketplace/block-sort': typeof PlayMarketplaceBlockSortLazyRoute
  '/play/marketplace/dados': typeof PlayMarketplaceDadosLazyRoute
  '/play/marketplace/do-not-make': typeof PlayMarketplaceDoNotMakeLazyRoute
  '/play/marketplace/golfrog': typeof PlayMarketplaceGolfrogLazyRoute
  '/play/marketplace/hipodromocasino': typeof PlayMarketplaceHipodromocasinoLazyRoute
  '/play/marketplace/maquina-tragamonedas-react': typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  '/play/marketplace/memory-game': typeof PlayMarketplaceMemoryGameLazyRoute
  '/play/marketplace/pong': typeof PlayMarketplacePongLazyRoute
  '/play/marketplace/puzle': typeof PlayMarketplacePuzleLazyRoute
  '/play/marketplace/rock-paper-scissors': typeof PlayMarketplaceRockPaperScissorsLazyRoute
  '/play/marketplace/ruletacasino': typeof PlayMarketplaceRuletacasinoLazyRoute
  '/play/marketplace/the-society-of-multiphobics': typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  '/play/marketplace/word-scramble': typeof PlayMarketplaceWordScrambleLazyRoute
  '/play/online/connect4': typeof PlayOnlineConnect4LazyRoute
  '/play/online/tictac': typeof PlayOnlineTictacLazyRoute
  '/games/$id/': typeof GamesIdIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/category-games'
    | '/games'
    | '/auth/login'
    | '/auth/register'
    | '/category-games/$id'
    | '/transfers/$id'
    | '/transfers/new'
    | '/user/me'
    | '/category-games/'
    | '/games/'
    | '/play/marketplace/LostOnStrangerTerra'
    | '/play/marketplace/TheSocietyOfMultiphobics'
    | '/play/marketplace/lostCity'
    | '/play/marketplace/maquinaTragamonedas'
    | '/games/$id/matches'
    | '/play/marketplace/2048'
    | '/play/marketplace/block-sort'
    | '/play/marketplace/dados'
    | '/play/marketplace/do-not-make'
    | '/play/marketplace/golfrog'
    | '/play/marketplace/hipodromocasino'
    | '/play/marketplace/maquina-tragamonedas-react'
    | '/play/marketplace/memory-game'
    | '/play/marketplace/pong'
    | '/play/marketplace/puzle'
    | '/play/marketplace/rock-paper-scissors'
    | '/play/marketplace/ruletacasino'
    | '/play/marketplace/the-society-of-multiphobics'
    | '/play/marketplace/word-scramble'
    | '/play/online/connect4'
    | '/play/online/tictac'
    | '/games/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/category-games/$id'
    | '/transfers/$id'
    | '/transfers/new'
    | '/user/me'
    | '/category-games'
    | '/games'
    | '/play/marketplace/LostOnStrangerTerra'
    | '/play/marketplace/TheSocietyOfMultiphobics'
    | '/play/marketplace/lostCity'
    | '/play/marketplace/maquinaTragamonedas'
    | '/games/$id/matches'
    | '/play/marketplace/2048'
    | '/play/marketplace/block-sort'
    | '/play/marketplace/dados'
    | '/play/marketplace/do-not-make'
    | '/play/marketplace/golfrog'
    | '/play/marketplace/hipodromocasino'
    | '/play/marketplace/maquina-tragamonedas-react'
    | '/play/marketplace/memory-game'
    | '/play/marketplace/pong'
    | '/play/marketplace/puzle'
    | '/play/marketplace/rock-paper-scissors'
    | '/play/marketplace/ruletacasino'
    | '/play/marketplace/the-society-of-multiphobics'
    | '/play/marketplace/word-scramble'
    | '/play/online/connect4'
    | '/play/online/tictac'
    | '/games/$id'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/category-games'
    | '/games'
    | '/auth/login'
    | '/auth/register'
    | '/category-games/$id'
    | '/transfers/$id'
    | '/transfers/new'
    | '/user/me'
    | '/category-games/'
    | '/games/'
    | '/play/marketplace/LostOnStrangerTerra'
    | '/play/marketplace/TheSocietyOfMultiphobics'
    | '/play/marketplace/lostCity'
    | '/play/marketplace/maquinaTragamonedas'
    | '/games/$id/matches'
    | '/play/marketplace/2048'
    | '/play/marketplace/block-sort'
    | '/play/marketplace/dados'
    | '/play/marketplace/do-not-make'
    | '/play/marketplace/golfrog'
    | '/play/marketplace/hipodromocasino'
    | '/play/marketplace/maquina-tragamonedas-react'
    | '/play/marketplace/memory-game'
    | '/play/marketplace/pong'
    | '/play/marketplace/puzle'
    | '/play/marketplace/rock-paper-scissors'
    | '/play/marketplace/ruletacasino'
    | '/play/marketplace/the-society-of-multiphobics'
    | '/play/marketplace/word-scramble'
    | '/play/online/connect4'
    | '/play/online/tictac'
    | '/games/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  CategoryGamesRoute: typeof CategoryGamesRouteWithChildren
  GamesRoute: typeof GamesRouteWithChildren
  TransfersIdLazyRoute: typeof TransfersIdLazyRoute
  TransfersNewLazyRoute: typeof TransfersNewLazyRoute
  UserMeLazyRoute: typeof UserMeLazyRoute
  PlayMarketplaceLostOnStrangerTerraRoute: typeof PlayMarketplaceLostOnStrangerTerraRoute
  PlayMarketplaceTheSocietyOfMultiphobicsRoute: typeof PlayMarketplaceTheSocietyOfMultiphobicsRoute
  PlayMarketplaceLostCityRoute: typeof PlayMarketplaceLostCityRoute
  PlayMarketplaceMaquinaTragamonedasRoute: typeof PlayMarketplaceMaquinaTragamonedasRoute
  PlayMarketplace2048LazyRoute: typeof PlayMarketplace2048LazyRoute
  PlayMarketplaceBlockSortLazyRoute: typeof PlayMarketplaceBlockSortLazyRoute
  PlayMarketplaceDadosLazyRoute: typeof PlayMarketplaceDadosLazyRoute
  PlayMarketplaceDoNotMakeLazyRoute: typeof PlayMarketplaceDoNotMakeLazyRoute
  PlayMarketplaceGolfrogLazyRoute: typeof PlayMarketplaceGolfrogLazyRoute
  PlayMarketplaceHipodromocasinoLazyRoute: typeof PlayMarketplaceHipodromocasinoLazyRoute
  PlayMarketplaceMaquinaTragamonedasReactLazyRoute: typeof PlayMarketplaceMaquinaTragamonedasReactLazyRoute
  PlayMarketplaceMemoryGameLazyRoute: typeof PlayMarketplaceMemoryGameLazyRoute
  PlayMarketplacePongLazyRoute: typeof PlayMarketplacePongLazyRoute
  PlayMarketplacePuzleLazyRoute: typeof PlayMarketplacePuzleLazyRoute
  PlayMarketplaceRockPaperScissorsLazyRoute: typeof PlayMarketplaceRockPaperScissorsLazyRoute
  PlayMarketplaceRuletacasinoLazyRoute: typeof PlayMarketplaceRuletacasinoLazyRoute
  PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute: typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute
  PlayMarketplaceWordScrambleLazyRoute: typeof PlayMarketplaceWordScrambleLazyRoute
  PlayOnlineConnect4LazyRoute: typeof PlayOnlineConnect4LazyRoute
  PlayOnlineTictacLazyRoute: typeof PlayOnlineTictacLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/games': {
      id: '/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/category-games': {
      id: '/category-games'
      path: '/category-games'
      fullPath: '/category-games'
      preLoaderRoute: typeof CategoryGamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/': {
      id: '/games/'
      path: '/'
      fullPath: '/games/'
      preLoaderRoute: typeof GamesIndexLazyRouteImport
      parentRoute: typeof GamesRoute
    }
    '/category-games/': {
      id: '/category-games/'
      path: '/'
      fullPath: '/category-games/'
      preLoaderRoute: typeof CategoryGamesIndexLazyRouteImport
      parentRoute: typeof CategoryGamesRoute
    }
    '/user/me': {
      id: '/user/me'
      path: '/user/me'
      fullPath: '/user/me'
      preLoaderRoute: typeof UserMeLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transfers/new': {
      id: '/transfers/new'
      path: '/transfers/new'
      fullPath: '/transfers/new'
      preLoaderRoute: typeof TransfersNewLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transfers/$id': {
      id: '/transfers/$id'
      path: '/transfers/$id'
      fullPath: '/transfers/$id'
      preLoaderRoute: typeof TransfersIdLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/category-games/$id': {
      id: '/category-games/$id'
      path: '/$id'
      fullPath: '/category-games/$id'
      preLoaderRoute: typeof CategoryGamesIdLazyRouteImport
      parentRoute: typeof CategoryGamesRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyRouteImport
      parentRoute: typeof AuthRoute
    }
    '/games/$id/': {
      id: '/games/$id/'
      path: '/$id'
      fullPath: '/games/$id'
      preLoaderRoute: typeof GamesIdIndexLazyRouteImport
      parentRoute: typeof GamesRoute
    }
    '/play/online/tictac': {
      id: '/play/online/tictac'
      path: '/play/online/tictac'
      fullPath: '/play/online/tictac'
      preLoaderRoute: typeof PlayOnlineTictacLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/online/connect4': {
      id: '/play/online/connect4'
      path: '/play/online/connect4'
      fullPath: '/play/online/connect4'
      preLoaderRoute: typeof PlayOnlineConnect4LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/word-scramble': {
      id: '/play/marketplace/word-scramble'
      path: '/play/marketplace/word-scramble'
      fullPath: '/play/marketplace/word-scramble'
      preLoaderRoute: typeof PlayMarketplaceWordScrambleLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/the-society-of-multiphobics': {
      id: '/play/marketplace/the-society-of-multiphobics'
      path: '/play/marketplace/the-society-of-multiphobics'
      fullPath: '/play/marketplace/the-society-of-multiphobics'
      preLoaderRoute: typeof PlayMarketplaceTheSocietyOfMultiphobicsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/ruletacasino': {
      id: '/play/marketplace/ruletacasino'
      path: '/play/marketplace/ruletacasino'
      fullPath: '/play/marketplace/ruletacasino'
      preLoaderRoute: typeof PlayMarketplaceRuletacasinoLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/rock-paper-scissors': {
      id: '/play/marketplace/rock-paper-scissors'
      path: '/play/marketplace/rock-paper-scissors'
      fullPath: '/play/marketplace/rock-paper-scissors'
      preLoaderRoute: typeof PlayMarketplaceRockPaperScissorsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/puzle': {
      id: '/play/marketplace/puzle'
      path: '/play/marketplace/puzle'
      fullPath: '/play/marketplace/puzle'
      preLoaderRoute: typeof PlayMarketplacePuzleLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/pong': {
      id: '/play/marketplace/pong'
      path: '/play/marketplace/pong'
      fullPath: '/play/marketplace/pong'
      preLoaderRoute: typeof PlayMarketplacePongLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/memory-game': {
      id: '/play/marketplace/memory-game'
      path: '/play/marketplace/memory-game'
      fullPath: '/play/marketplace/memory-game'
      preLoaderRoute: typeof PlayMarketplaceMemoryGameLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/maquina-tragamonedas-react': {
      id: '/play/marketplace/maquina-tragamonedas-react'
      path: '/play/marketplace/maquina-tragamonedas-react'
      fullPath: '/play/marketplace/maquina-tragamonedas-react'
      preLoaderRoute: typeof PlayMarketplaceMaquinaTragamonedasReactLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/hipodromocasino': {
      id: '/play/marketplace/hipodromocasino'
      path: '/play/marketplace/hipodromocasino'
      fullPath: '/play/marketplace/hipodromocasino'
      preLoaderRoute: typeof PlayMarketplaceHipodromocasinoLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/golfrog': {
      id: '/play/marketplace/golfrog'
      path: '/play/marketplace/golfrog'
      fullPath: '/play/marketplace/golfrog'
      preLoaderRoute: typeof PlayMarketplaceGolfrogLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/do-not-make': {
      id: '/play/marketplace/do-not-make'
      path: '/play/marketplace/do-not-make'
      fullPath: '/play/marketplace/do-not-make'
      preLoaderRoute: typeof PlayMarketplaceDoNotMakeLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/dados': {
      id: '/play/marketplace/dados'
      path: '/play/marketplace/dados'
      fullPath: '/play/marketplace/dados'
      preLoaderRoute: typeof PlayMarketplaceDadosLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/block-sort': {
      id: '/play/marketplace/block-sort'
      path: '/play/marketplace/block-sort'
      fullPath: '/play/marketplace/block-sort'
      preLoaderRoute: typeof PlayMarketplaceBlockSortLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/2048': {
      id: '/play/marketplace/2048'
      path: '/play/marketplace/2048'
      fullPath: '/play/marketplace/2048'
      preLoaderRoute: typeof PlayMarketplace2048LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$id/matches': {
      id: '/games/$id/matches'
      path: '/$id/matches'
      fullPath: '/games/$id/matches'
      preLoaderRoute: typeof GamesIdMatchesLazyRouteImport
      parentRoute: typeof GamesRoute
    }
    '/play/marketplace/maquinaTragamonedas': {
      id: '/play/marketplace/maquinaTragamonedas'
      path: '/play/marketplace/maquinaTragamonedas'
      fullPath: '/play/marketplace/maquinaTragamonedas'
      preLoaderRoute: typeof PlayMarketplaceMaquinaTragamonedasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/lostCity': {
      id: '/play/marketplace/lostCity'
      path: '/play/marketplace/lostCity'
      fullPath: '/play/marketplace/lostCity'
      preLoaderRoute: typeof PlayMarketplaceLostCityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/TheSocietyOfMultiphobics': {
      id: '/play/marketplace/TheSocietyOfMultiphobics'
      path: '/play/marketplace/TheSocietyOfMultiphobics'
      fullPath: '/play/marketplace/TheSocietyOfMultiphobics'
      preLoaderRoute: typeof PlayMarketplaceTheSocietyOfMultiphobicsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/marketplace/LostOnStrangerTerra': {
      id: '/play/marketplace/LostOnStrangerTerra'
      path: '/play/marketplace/LostOnStrangerTerra'
      fullPath: '/play/marketplace/LostOnStrangerTerra'
      preLoaderRoute: typeof PlayMarketplaceLostOnStrangerTerraRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface CategoryGamesRouteChildren {
  CategoryGamesIdLazyRoute: typeof CategoryGamesIdLazyRoute
  CategoryGamesIndexLazyRoute: typeof CategoryGamesIndexLazyRoute
}

const CategoryGamesRouteChildren: CategoryGamesRouteChildren = {
  CategoryGamesIdLazyRoute: CategoryGamesIdLazyRoute,
  CategoryGamesIndexLazyRoute: CategoryGamesIndexLazyRoute,
}

const CategoryGamesRouteWithChildren = CategoryGamesRoute._addFileChildren(
  CategoryGamesRouteChildren,
)

interface GamesRouteChildren {
  GamesIndexLazyRoute: typeof GamesIndexLazyRoute
  GamesIdMatchesLazyRoute: typeof GamesIdMatchesLazyRoute
  GamesIdIndexLazyRoute: typeof GamesIdIndexLazyRoute
}

const GamesRouteChildren: GamesRouteChildren = {
  GamesIndexLazyRoute: GamesIndexLazyRoute,
  GamesIdMatchesLazyRoute: GamesIdMatchesLazyRoute,
  GamesIdIndexLazyRoute: GamesIdIndexLazyRoute,
}

const GamesRouteWithChildren = GamesRoute._addFileChildren(GamesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  CategoryGamesRoute: CategoryGamesRouteWithChildren,
  GamesRoute: GamesRouteWithChildren,
  TransfersIdLazyRoute: TransfersIdLazyRoute,
  TransfersNewLazyRoute: TransfersNewLazyRoute,
  UserMeLazyRoute: UserMeLazyRoute,
  PlayMarketplaceLostOnStrangerTerraRoute:
    PlayMarketplaceLostOnStrangerTerraRoute,
  PlayMarketplaceTheSocietyOfMultiphobicsRoute:
    PlayMarketplaceTheSocietyOfMultiphobicsRoute,
  PlayMarketplaceLostCityRoute: PlayMarketplaceLostCityRoute,
  PlayMarketplaceMaquinaTragamonedasRoute:
    PlayMarketplaceMaquinaTragamonedasRoute,
  PlayMarketplace2048LazyRoute: PlayMarketplace2048LazyRoute,
  PlayMarketplaceBlockSortLazyRoute: PlayMarketplaceBlockSortLazyRoute,
  PlayMarketplaceDadosLazyRoute: PlayMarketplaceDadosLazyRoute,
  PlayMarketplaceDoNotMakeLazyRoute: PlayMarketplaceDoNotMakeLazyRoute,
  PlayMarketplaceGolfrogLazyRoute: PlayMarketplaceGolfrogLazyRoute,
  PlayMarketplaceHipodromocasinoLazyRoute:
    PlayMarketplaceHipodromocasinoLazyRoute,
  PlayMarketplaceMaquinaTragamonedasReactLazyRoute:
    PlayMarketplaceMaquinaTragamonedasReactLazyRoute,
  PlayMarketplaceMemoryGameLazyRoute: PlayMarketplaceMemoryGameLazyRoute,
  PlayMarketplacePongLazyRoute: PlayMarketplacePongLazyRoute,
  PlayMarketplacePuzleLazyRoute: PlayMarketplacePuzleLazyRoute,
  PlayMarketplaceRockPaperScissorsLazyRoute:
    PlayMarketplaceRockPaperScissorsLazyRoute,
  PlayMarketplaceRuletacasinoLazyRoute: PlayMarketplaceRuletacasinoLazyRoute,
  PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute:
    PlayMarketplaceTheSocietyOfMultiphobicsLazyRoute,
  PlayMarketplaceWordScrambleLazyRoute: PlayMarketplaceWordScrambleLazyRoute,
  PlayOnlineConnect4LazyRoute: PlayOnlineConnect4LazyRoute,
  PlayOnlineTictacLazyRoute: PlayOnlineTictacLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
